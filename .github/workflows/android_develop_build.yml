name: Android CI Development

on:
  push:
    branches: [master]

jobs:
  build:
    if: ${{ github.actor != 'GitHub Action' }}
    runs-on: ubuntu-latest
    environment: Development

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: "22"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: "tools platform-tools"

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: "3.16.x"

      - name: Use cmake
        run: cmake --version

      - name: Install JS dependencies
        run: |
          npm i -g corepack
          yarn install

      - name: Create .env file
        run: |
          cat << EOF > .env
          API_URL=${{ secrets.API_BASE_URL }}
          EOF

      - name: Grant execute permission for gradlew
        run: |
          cd android
          chmod +x gradlew

      - name: Decrypt keystore file
        run: openssl enc -aes-256-cbc -d -pbkdf2 -in android/app/keystore.jks.enc -out android/app/keystore.jks -k ${{ secrets.DECRYPTION_KEYSTORE_PASSWORD }}

      - name: Set up gradle.properties
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=keystore.jks" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=upload" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> android/gradle.properties

      - name: Update versionCode in build.gradle
        run: |
          echo "run_number=$((20 + ${{ github.run_number }}))" >> $GITHUB_ENV

      - name: Replace in file
        run: |
          sed -i "s/versionCode .*$/versionCode ${run_number}/g" android/app/build.gradle

      - name: Update the versionName based on the commit message
        run: |
          MAJOR_PATTERN="[MAJOR]"
          MINOR_PATTERN="[MINOR]"
          VERSION_MAJOR=$(grep -E '^versionMajor = [0-9]+' android/version.properties | awk -F' = ' '{print $2}')
          VERSION_MINOR=$(grep -E '^versionMinor = [0-9]+' android/version.properties | awk -F' = ' '{print $2}')
          VERSION_PATCH=$(grep -E '^versionPatch = [0-9]+' android/version.properties | awk -F' = ' '{print $2}')

          if echo "${{ github.event.head_commit.message }}" | grep -qF "${MAJOR_PATTERN}"; then
            VERSION_MAJOR=$((VERSION_MAJOR + 1))
            VERSION_MINOR=0
            VERSION_PATCH=0
          elif echo "${{ github.event.head_commit.message }}" | grep -qF "${MINOR_PATTERN}"; then
            VERSION_MINOR=$((VERSION_MINOR + 1))
            VERSION_PATCH=0
          else
            VERSION_PATCH=$((VERSION_PATCH + 1))
          fi

          VERSION_NAME="${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}"

          echo "versionMajor = ${VERSION_MAJOR}" > android/version.properties
          echo "versionMinor = ${VERSION_MINOR}" >> android/version.properties
          echo "versionPatch = ${VERSION_PATCH}" >> android/version.properties

          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV
          sed -i "s/versionName \".*\"$/versionName \"${VERSION_NAME}\"/g" android/app/build.gradle
          echo "New versionName is ${VERSION_NAME}"

      - name: Build with Gradle (AAB for Play Store)
        run: |
          cd android
          ./gradlew bundleRelease

      - name: Build APK for testing
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-development-release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-development-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Commit and push if version.properties changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add android/version.properties
          git diff --quiet && git diff --staged --quiet || git commit -m "Update version.properties"
          git push
